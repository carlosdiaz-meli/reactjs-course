{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,sBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,MAMnB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAAP,GACtBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAClC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCNJK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DAEJ,mCACTN,EAHa,uDAEJ,mCAFI,uBAGiEO,UAAWF,IAH5E,SAKEG,MAAMR,GALR,cAKbS,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXnB,kBAcZY,GAdY,4CAAH,sDCIPM,EAAU,SAAC,GAAoB,IAAjBb,EAAgB,EAAhBA,SAAgB,ECDf,SAAAA,GAAa,IAAD,EAEVpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAepC,OARAC,qBAAW,WACPlB,EAASC,GACJkB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBV,KAAMa,EACNL,SAAS,SAElB,CAAEd,IAEEe,EDZ2BK,CAAcpB,GAAlCW,EAFyB,EAE/BL,KAAcQ,EAFiB,EAEjBA,QAEtB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IAElDc,GAAW,mBAAGlB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEblCW,EAAe,WAAO,IAAD,EAEQzC,mBAAS,CAAC,gBAFlB,mBAEtB0C,EAFsB,KAEV3C,EAFU,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAWA,GACLA,Y,MCdlCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.86c52e1c.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue( e.target.value );\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 )Â {\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue( '' );\n        }\n\n    };\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    );\n}\n","export const getGifs = async category => {\n\n    const apiKey = 'sqQOHDNaCw1JvcYTbrnetsT7NuYdwFXU';\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${ apiKey }&limit=10&q=${ encodeURI( category ) }`;\n\n    const resp   = await fetch(url);\n    const { data } = await resp.json(); \n\n    const gifs = data.map( img => ({\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n    }));\n\n    return gifs;\n};","import { GifGridItem } from './GifGridItem';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ( { category } ) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem key={ img.id } { ...img } />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = category => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => setState({\n                data: imgs,\n                loading: false\n            }));\n    }, [ category ]);\n\n    return state;\n\n};","import { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [ categories, setCategories ] = useState(['Dragon Ball']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid\n                            category={ category }\n                            key={ category }\n                        />\n                    )\n                }\n            </ol>\n        </>\n    );\n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}