{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","activeEvent","modalOpen","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","event","start","moment","toDate","end","eventAddNew","eventClearActiveEvent","eventLoaded","eventUpdated","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterLoginInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","uid","msg","setItem","Date","getTime","Swal","fire","placeholder","onChange","rname","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","view","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ac1ea32.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[UI] Open Modal',\n    uiCloseModal: '[UI] Close Modal',\n\n    eventAddNew: '[event] Add new',\n    eventStartAddNew: '[event] Start add new',\n    eventSetActive: '[event] Set active',\n    eventLogout: '[event] Clean events',\n    eventClearActive: '[event] Clear active',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            };\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload,\n            };\n        case types.eventClearActive: \n            return {\n                ...state,\n                activeEvent: null\n            };\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => e.id === action.payload.id\n                        ? action.payload\n                        : e\n                )\n            };\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(e => e.id !== state.activeEvent.id),\n                activeEvent: null\n            };\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [\n                    ...action.payload\n                ]\n            };\n        case types.eventLogout:\n            return {\n                ...initialState,\n            };\n        default:\n            return state;\n    }\n};","import { types } from '../types/types';\n\nconst initialState = {\n    modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            };\n        default:\n            return state;\n    }\n};","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authChecking:\n            return {\n                ...state,\n            };\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            };\n        case types.authStartLogin:\n            return {\n                ...state,\n            };\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false,\n            };\n        case types.authStartRegister:\n            return {\n                ...state,\n            };\n        case types.authStartTokenRenew:\n            return {\n                ...state,\n            };\n        case types.authLogout:\n            return {\n                checking: false,\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\nimport { authReducer } from './authReducer';\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    }\n    return fetch(url, {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n};\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token,\n            },\n        });\n    }\n    return fetch(url, {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n            'x-token': token,\n        },\n        body: JSON.stringify(data),\n    });\n};\n\nexport {\n    fetchSinToken,\n    fetchConToken,\n};\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => events.map(event => ({\n    ...event,\n    start: moment(event.start).toDate(),\n    end: moment(event.end).toDate(),\n}));","import Swal from 'sweetalert2';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAddNew = (event) => async (dispatch, getState) => {\n    try {\n        const { uid, name } = getState().auth;\n\n        const resp = await fetchConToken('events', event, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            dispatch(eventAddNew({\n                ...event,\n                id: body.evento.id,\n                user: {\n                    _id: uid,\n                    name\n                }\n            }));\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActive\n});\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => async (dispatch) => {\n    try {\n        const resp = await fetchConToken('events');\n        const body = await resp.json();\n        if (body.ok) {\n            dispatch(eventLoaded(prepareEvents(body.eventos)));\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events,\n});\n\nexport const eventStartUpdate = (event) => async (dispatch) => {\n    try {\n        const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n        const body = await resp.json();\n        if (body.ok) {\n            dispatch(eventUpdated(event));\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => async (dispatch, getState) => {\n    try {\n        const { id } = getState().calendar.activeEvent;\n        const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n        const body = await resp.json();\n        if (body.ok) {\n            dispatch(eventDeleted());\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const eventLogout = () => ({\n    type: types.eventLogout,\n});\n","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => async (dispatch) => {\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\n    const { ok, token, uid, name, msg } = await resp.json();\n\n    if (ok) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n\n        dispatch(login({\n            uid,\n            name,\n        }));\n    } else {\n        Swal.fire('Error', msg, 'error');\n    }\n};\n\nexport const startRegister = (email, password, rname) => async (dispatch) => {\n    const resp = await fetchSinToken('auth/new', { email, password, name: rname }, 'POST');\n    const { ok, token, uid, name, msg } = await resp.json();\n\n    if (ok) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n\n        dispatch(login({\n            uid,\n            name,\n        }));\n    } else {\n        Swal.fire('Error', msg, 'error');\n    }\n};\n\nexport const startChecking = () => async (dispatch) => {\n    const resp = await fetchConToken('auth/renew');\n    const { ok, token, uid, name, msg } = await resp.json();\n\n    if (ok) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n\n        dispatch(login({\n            uid,\n            name,\n        }));\n    } else {\n        dispatch(checkingFinish());\n    }\n};\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user,\n});\n\nexport const startLogout = () => (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n};\n\nexport const logout = () => ({\n    type: types.authLogout,\n});\n","\nimport { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState( initialState );\n\n    const reset = () => setValues( initialState );\n\n    const handleInputChange = ({ target: { name, value } }) => setValues({\n        ...values,\n        [ name ]: value\n    });\n\n    return [\n        values,\n        handleInputChange,\n        reset\n    ];\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n\n    // const { modalOpen } = useSelector(state => state.auth);\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'cedv90@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterLoginInputChange ] = useForm({\n        rName: 'Eduardo',\n        rEmail: 'cedv90@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const {\n        rName,\n        rEmail,\n        rPassword1,\n        rPassword2\n    } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLogin(lEmail, lPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n        }\n\n        dispatch(startRegister(rEmail, rPassword1, rName));\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterLoginInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterLoginInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user} = event;\n    \n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name }</span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport Swal from 'sweetalert2';\nimport DateTimePicker from 'react-datetime-picker';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: 'Evento',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [validTitle, setValidTitle] = useState(true);\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { title, notes, start, end } = formValues;\n\n    useEffect(() => {\n        \n        if (activeEvent) {\n            setFormValues(activeEvent);\n        } else {\n            setFormValues(initEvent);\n        }\n\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if (title.trim().length < 2) {\n            return setValidTitle(false);\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setValidTitle(true);\n        closeModal();\n    };\n\n    return (\n        <Modal\n            isOpen={ modalOpen }\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n            closeTimeoutMS={200}\n        >\n            <h1> { activeEvent ? 'Editar evento' : 'Nuevo evento' } </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={ handleSubmit }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={ handleEndDateChange }\n                        minDate={ dateStart }\n                        value={ dateEnd }\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={ `form-control ${!validTitle && 'is-invalid'}` }\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal());\n    };\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    };\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    };\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        const style = {\n            backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        };\n        return {\n            style\n        };\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                view={ lastView }\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ height: 500 }}\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                components={{\n                    event: CalendarEvent\n                }}\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                onView={ onViewChange }\n            />\n\n            <AddNewFab />\n            {activeEvent && <DeleteEventFab />}\n\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isLoggedIn,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route\n            { ...rest }\n            component={ \n                (props) => (\n                    ( isLoggedIn )\n                        ? ( <Component { ...props } /> )\n                        : ( <Redirect to=\"/login\" /> )\n                )\n            }\n\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isLoggedIn,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isLoggedIn)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/\" />)\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return <h5>Espere...</h5>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        isLoggedIn={ !!uid }\n                        path=\"/login\"\n                        component={LoginScreen}\n                    />\n\n                    <PrivateRoute\n                        exact\n                        isLoggedIn={ !!uid }\n                        path=\"/\"\n                        component={CalendarScreen}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}